unit cAbastecimento;

interface

uses System.Classes,
     System.SysUtils,
     FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf,
     FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async,
     FireDAC.Phys, FireDAC.FMXUI.Wait, FireDAC.Stan.Param, FireDAC.DatS,
     FireDAC.DApt.Intf, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
     FireDAC.Comp.Client;

type
  TAbastecimento = Class
    private
    FConexao: TFDConnection;

    public
    constructor Create(AConexao:TFDConnection);
    destructor Destroy; override;
    property Conexao: TFDConnection read FConexao write FConexao;
    function GerarNumeroDocumento(out ANumero : Integer):Boolean;
  End;


implementation

{ TAbastecimento }

{$region 'CONSTRUTOR E DESTRUIDOR'}
constructor TAbastecimento.Create(AConexao: TFDConnection);
begin
  Conexao := AConexao;
end;

destructor TAbastecimento.Destroy;
begin
  inherited;
end;

{$endregion}

{$region 'METODOS'}

function TAbastecimento.GerarNumeroDocumento(out ANumero: Integer): Boolean;
var
  qry : TFDQuery;
begin

  Result := false;
  try

    qry.Active := false;
    qry.SQL.clear;
    qry.SQL.Add('select max(Documento) as Documento from TAB_ABASTECIMENTOS Where CodEmp = :CodEmp');
    qry.ParamByName('CodEmp').AsInteger := 1;
    qry.Active := true;

  finally
  qry.DisposeOf;
  end;

end;

{$endregion}


end.
